package com.openske.rules;

/**
 * Assets Rules
 */

import com.openske.model.hardware.Host;
import com.openske.model.assets.Asset;
import com.openske.model.software.Software;
import com.openske.model.security.SecurityState;

rule "Print assets that have become risky"
    when
        $asset : Asset( securityState == SecurityState.RISKY )
    then
        System.out.println("[ASSETS] Asset '" + $asset.getName() + "' has become risky !");
end

rule "Mark assets that are surrounded by risky software as risky"
    when
        # Match any asset
        $asset : Asset()
        and
        exists(
            # Match any risky software on the same asset host
            $software : Software( host == $asset.host , securityState == SecurityState.RISKY )
            or
            (
                # Match any host that is connected to the asset host
                $neighbor : Host( connections contains $asset.host )
                and
                # Match any risky software on the connected host
                $software : Software( host == $neighbor , securityState == SecurityState.RISKY )
            )
        )
    then
        $asset.setSecurityState(SecurityState.RISKY);
end
